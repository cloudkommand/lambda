{
    "components": {
        "function": {
            "type": "ext",
            "displayname": "CK Lambda Function",
            "description": "Deploys an AWS Lambda Function. Lambda functions are one of the foundational compute units AWS offers",
            "cloud": "AWS",
            "download_folder": true,
            "resources": ["AWS::lambda::function"],
            "environment_variables": {
                "role_lambda_name": "@iam.role:props.function_name",
                "codebuild_project_lambda_name": "@codebuild.project:props.function_name",
                "codebuild_build_lambda_name": "@codebuildactions.runbuild:props.function_name",
                "ecr_image_lambda_name": "@ecr.image:props.function_name",
                "ecr_repo_lambda_name": "@ecr.repo:props.function_name"
            },
            "policy": {
                "Version": "2012-10-17",
                "Statement": [{
                    "Sid": "Vis",
                    "Effect": "Allow",
                    "Action": [
                        "iam:PassRole",
                        "lambda:CreateFunction",
                        "lambda:DeleteFunction",
                        "lambda:GetFunction",
                        "lambda:InvokeFunction",
                        "lambda:UpdateFunctionCode",
                        "lambda:UpdateFunctionConfiguration",
                        "lambda:TagResource",
                        "lambda:UntagResource",
                        "lambda:GetLayerVersion",
                        "lambda:CreateAlias",
                        "lambda:DeleteAlias",
                        "lambda:GetAlias",
                        "lambda:UpdateAlias",
                        "lambda:PublishVersion",
                        "lambda:DeleteFunctionConcurrency",
                        "lambda:PutFunctionConcurrency",
                        "lambda:GetFunctionConcurrency",
                        "lambda:DeleteProvisionedConcurrencyConfig",
                        "lambda:PutProvisionedConcurrencyConfig",
                        "lambda:GetProvisionedConcurrencyConfig",
                        "ecr:SetRepositoryPolicy",
                        "ecr:GetDownloadUrlForLayer",
                        "ecr:BatchGetImage",
                        "ecr:CompleteLayerUpload",
                        "ecr:DescribeImages",
                        "ecr:DescribeRepositories",
                        "ecr:UploadLayerPart",
                        "ecr:ListImages",
                        "ecr:InitiateLayerUpload",
                        "ecr:BatchCheckLayerAvailability",
                        "ecr:GetRepositoryPolicy",
                        "ecr:PutImage",
                        "ecr:GetAuthorizationToken",
                        "logs:DeleteLogGroup",
                        "s3:ListBucket",
                        "s3:GetObject",
                        "s3:PutObject"
                    ],
                    "Resource": "*"
                }]
            },
            "input": {
                "type": "object",
                "properties": {
                    "runtime": {
                        "type": "string",
                        "default": "python3.9",
                        "enum": ["python3.9", "python3.8", "python3.6", "python3.7", "nodejs14.x", "nodejs12.x", "nodejs10.x", "ruby2.7", "ruby2.5"],
                        "description": "The runtime for the Lambda function (language identifier)"
                    },
                    "handler": {
                        "type": "string",
                        "description": "{name_of_file_with_handler_in_it}.{name_of_handler_function_in_file}. Defaults to index.handler for Node Lambdas and lambda_function.lambda_handler for all others"
                    },
                    "description": {
                        "type": "string",
                        "description": "A description for this function. Will be auto-generated if not specified"
                    },
                    "timeout": {
                        "type": "integer",
                        "description": "The number of seconds before this Lambda function times out automatically",
                        "default": 5,
                        "minimum": 1,
                        "maximum": 900
                    },
                    "memory_size": {
                        "type": "integer",
                        "description": "The amount of memory to assign to this Lambda function. Also affects compute and I/O",
                        "default": 256,
                        "minimum": 128,
                        "maximum": 10240
                    },
                    "environment_variables": {
                        "type": "object",
                        "description": "Key-value pairs of environment variables to be set for the Lambda function. Values must be strings"
                    },
                    "role": {
                        "type": "string",
                        "description": "A component reference to a component that exposes an arn prop. The role associated with that ARN will be attached to the function"
                    },
                    "role_arn": {
                        "type": "string",
                        "description": "An ARN of the role to attach to the Lambda function"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the Lambda function. Will be auto-generated if not specified"
                    },
                    "tags": {
                        "type": "object",
                        "description": "The tags to attach to this function"
                    },
                    "policies": {
                        "type": "array",
                        "description": "A list of component references to policy components that expose an arn prop. The policies associated with such ARNs will be attached to a role created for the function"
                    },
                    "policy_arns": {
                        "type": "array",
                        "description": "A list of IAM policy ARNs to attach to a custom-created IAM role for this Lambda function"
                    },
                    "role_tags": {
                        "type": "object",
                        "description": "If auto-generating a role, this sets the role's tags"
                    },
                    "also_tag_role": {
                        "type": "boolean",
                        "description": "If auto-generating a role, gives it the same tags as the function"
                    },
                    "requirements": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "description": "A list of the modules/dependencies that should be added to this lambda"
                        }
                    },
                    "requirements.txt": {
                        "type": "boolean",
                        "description": "Set to true if a requirements.txt file should be extracted for installation. This should be placed directly underneath the top level folder"
                    },
                    "layers": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "description": "A list of component references to layer components that expose a version_arn prop. The layer versions associated with such ARNs will be attached to the function"
                        }
                    },
                    "layer_version_arns": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "description": "A list of layer version ARNs to attach to the function"
                        }
                    }
                },
                "anyOf": [
                    {
                        "required": [
                            "role"
                        ]
                    },
                    {
                        "required": [
                            "role_arn"
                        ]
                    },
                    {
                        "required": [
                            "policies"
                        ]
                    },
                    {
                        "required": [
                            "policy_arns"
                        ]
                    }
                ]
            },
            "props": {
                "arn": {
                    "type": "string",
                    "description": "The ARN of the Lambda"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the Lambda"
                },
                "code_size": {
                    "type": "integer",
                    "description": "The amount of bytes of code present"
                },
                "code_sha": {
                    "type": "string",
                    "description": "A SHA of the deployed code"
                },
                "last_modified": {
                    "type": "string",
                    "description": "The last datetime when the Lambda was modified"
                },
                "master_arn": {
                    "type": "integer",
                    "description": "Unknown"
                },
                "layers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of layer version ARNs that are attached to this lambda"
                }
            }
        },
        "layer": {
            "type": "ext",
            "displayname": "CK Lambda Layer",
            "description": "Deploys an AWS Lambda Layer. Layers help you share code between Lambda functions efficiently",
            "cloud": "AWS",
            "download_folder": true,
            "resources": ["AWS::lambda::layer"],
            "environment_variables": {
                "function_lambda_name": "@function:props.function_name",
                "codebuild_project_lambda_name": "@codebuild.project:props.function_name",
                "codebuild_build_lambda_name": "@codebuildactions.runbuild:props.function_name"
            },
            "policy": {
                "Version": "2012-10-17",
                "Statement": [{
                    "Sid": "Vis",
                    "Effect": "Allow",
                    "Action": [
                        "iam:PassRole",
                        "lambda:GetFunction",
                        "lambda:InvokeFunction",
                        "lambda:AddLayerVersionPermission",
                        "lambda:DeleteLayerVersion",
                        "lambda:GetLayerVersion",
                        "lambda:ListLayerVersions",
                        "lambda:ListLayers",
                        "lambda:PublishLayerVersion",
                        "lambda:RemoveLayerVersionPermission",
                        "lambda:TagResource",
                        "lambda:UntagResource",
                        "s3:ListBucket",
                        "s3:GetObject",
                        "s3:PutObject"
                    ],
                    "Resource": "*"
                }]
            },
            "input": {
                "type": "object",
                "properties": {
                    "trust_level": {
                        "type": "string",
                        "description": "Set to full if you trust that what is in AWS has not changed, code if you still want to check the configuration of the pieces of code, and zero if you do not trust it at all",
                        "enum": ["zero", "code", "full"],
                        "default": "zero"
                    },
                    "compatible_runtimes": {
                        "type": "array",
                        "description": "A list of the compatible runtimes of the layer",
                        "default": ["python3.9", "python3.8", "python3.7", "python3.6"]
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the Lambda Layer. Will be auto-generated if not specified"
                    },
                    "requirements": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "description": "A list of the modules/dependencies that should be added to this layer"
                        }
                    },
                    "requirements.txt": {
                        "type": "boolean",
                        "description": "Set to true if a requirements.txt file should be extracted for installation. This should be placed directly underneath the top level folder"
                    },
                    "requirements_runtime": {
                        "type": "string",
                        "description": "The runtime to build your requirements inside",
                        "enum": ["python3.6", "python3.7", "python3.8", "python3.9", "nodejs12.x", "nodejs14.x"],
                        "default": "python3.9"
                    }
                }
            },
            "props": {
                "arn": {
                    "type": "string",
                    "description": "The ARN of the Layer"
                },
                "version_arn": {
                    "type": "string",
                    "description": "The ARN of the current layer version"
                },
                "version": {
                    "type": "integer",
                    "description": "The version number of the current layer version"
                },
                "initial_etag": {
                    "type": "string",
                    "description": "A SHA of the code obtained from Github for this layer"
                }
            }
        },
        "event_mapping": {
            "type": "ext",
            "displayname": "CK Lambda Event Mapping",
            "description": "Deploys an AWS Lambda EventSourceMapping. These mappings enable you to subscribe to an event source and trigger a Lambda function when that event is triggered",
            "cloud": "AWS",
            "resources": ["AWS::lambda::eventsourcemapping"],
            "policy": {
                "Version": "2012-10-17",
                "Statement": [{
                    "Sid": "Vis",
                    "Effect": "Allow",
                    "Action": [
                        "iam:PassRole",
                        "lambda:GetFunction",
                        "lambda:CreateEventSourceMapping",
                        "lambda:DeleteEventSourceMapping",
                        "lambda:ListEventSourceMappings",
                        "lambda:GetEventSourceMapping",
                        "lambda:UpdateEventSourceMapping",
                        "lambda:TagResource",
                        "lambda:UntagResource",
                        "s3:GetObject"
                    ],
                    "Resource": "*"
                }]
            },
            "input": {
                "type": "object",
                "properties": {
                    "event_source_arn": {
                        "type": "string",
                        "description": "The ARN of the event source to subscribe to a lambda",
                        "required": true
                    },
                    "function_arn": {
                        "type": "string",
                        "description": "The ARN of the Lambda function to invoke when the event is triggered",
                        "required": true
                    },
                    "batch_size": {
                        "type": "integer",
                        "description": "The number of records to send in a single invocation",
                        "default": 10,
                        "minimum": 1,
                        "maximum": 10000
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Set to false if you want to temporarily disable this event mapping",
                        "default": true
                    }
                }
            },
            "props": {
                "uuid": {
                    "type": "string",
                    "description": "The UUID of the Event Source Mapping"
                },
                "function_arn": {
                    "type": "string",
                    "description": "The lambda function ARN for this mapping"
                },
                "event_source_arn": {
                    "type": "string",
                    "description": "The event source ARN used in this mapping"
                }
            }
        }
    },
    "repos": {
        "iam": "https://github.com/cloudkommand/iam",
        "ecr": "https://github.com/cloudkommand/ecr",
        "codebuild": "https://github.com/cloudkommand/codebuild",
        "codebuildactions": "https://github.com/cloudkommand/codebuildactions"
    }
}